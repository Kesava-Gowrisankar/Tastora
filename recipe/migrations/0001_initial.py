# Generated by Django 5.2.7 on 2025-10-23 05:55

import django.core.validators
import django.db.models.deletion
import recipe.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('bio', models.CharField(blank=True, max_length=1000)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('category', models.PositiveIntegerField(choices=[(0, 'Veg'), (1, 'Vegan'), (2, 'Non-Veg')], default=0)),
                ('cuisine', models.CharField(max_length=50)),
                ('difficulty', models.PositiveIntegerField(choices=[(0, 'Easy'), (1, 'Medium'), (2, 'Hard')], default=0)),
                ('servings', models.PositiveIntegerField(default=1, help_text='Number of people the recipe serves')),
                ('prep_time', models.PositiveIntegerField(help_text='Time required to prepare ingredients in minutes')),
                ('total_time', models.PositiveIntegerField(help_text='Preparation time + Cooking Time in minutes', validators=[django.core.validators.MaxValueValidator(300), django.core.validators.MinValueValidator(5)])),
                ('calories', models.PositiveIntegerField(help_text='Estimated calories per serving')),
                ('instructions', models.TextField()),
                ('featured', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Recipes',
                'ordering': ('-created_at', 'title'),
                'unique_together': {('title', 'author')},
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit', models.IntegerField(choices=[(0, 'grams'), (1, 'kilogram'), (2, 'teaspoon'), (3, 'tablespoon'), (4, 'cup'), (5, 'piece')], default=0)),
                ('optional', models.BooleanField(default=False)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='recipe.recipe')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=recipe.models.recipe_image_upload_to)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='recipe.recipe')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to=settings.AUTH_USER_MODEL)),
                ('recipes', models.ManyToManyField(blank=True, to='recipe.recipe')),
            ],
            options={
                'ordering': ('-created_at', 'title'),
                'unique_together': {('title', 'owner')},
            },
        ),
    ]
